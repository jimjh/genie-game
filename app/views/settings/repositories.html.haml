= link_to 'Sync', url_for(sync: true), class: 'button secondary'
Last sync'ed #{distance_of_time_in_words_to_now @last_sync} ago.
%table
  %thead
    %tr
      %th
      %th Project
      %th Status
      %th Publishing
  %tbody
    - @repos.each do |repo|
      - lesson = @lessons[repo.clone_url]
      %tr
        %td.lesson-config
          - if lesson
            = link_to user_lesson_settings_path(current_user, lesson) do
              %i.foundicon-settings
        %td
          - if lesson.try(:published?)
            = link_to repo.full_name, user_lesson_path(current_user, lesson)
          - else
            = repo.full_name
        %td
          - if lesson
            .lesson-status{class: status_class_for(lesson)}
              %span.has-tip.tip-left{title: lesson.status.capitalize, 'data-tooltip' => ''}
          - else
            .lesson-status.hide
              %span.has-tip.tip-left{'data-tooltip' => ''}
        %td
          - on = checked? lesson
          = form_for Lesson.new, remote: true, html: {id: nil, class: 'publish'} do
            - if lesson
              %input{type: 'hidden', name: 'id',  value: lesson.id}
            %input{type: 'hidden', name: 'lesson[url]', value: repo.clone_url}
            %input{type: 'hidden', name: 'lesson[name]', value: repo.name}
            .switch.radius.small
              %input{type: 'radio', checked: !on, name: 'toggle', value: 'off'}
              %label Off
              %input{type: 'radio', checked: on, name: 'toggle', value: 'on'}
              %label On
              %span

- content_for :javascript do
  :javascript
    $(function() {

      var codes  = { published: 'green', publishing: 'yellow',
                     failed: 'red',      deactivated: 'red'};
      var colors = 'green yellow red hide';

      $('.publish').each(function() {

        var form = $(this);

        form.bind('ajax:success', function(event, data, status, xhr) {
          form.closest('tr')
            .find('.lesson-status')
            .removeClass(colors)
            .addClass(codes[data.status])     // update color class
            .find('span.has-tip')             // update tooltip text
            .attr('title', data.status.capitalize());
          if (xhr.status == 201) {            // add hidden input field for ID
            var attrs = { name: 'id', type: 'hidden', value: data.id };
            var input = $('<input>').attr(attrs);
            form.append(input);
          }
        });

        // submit form when switch is clicked
        form.find('input[type="radio"]').click(function() {
          form.submit();
        });

      });

    });

- # TODO improve error handling (lamp, github, active record, faye)
- # TODO add reactivity (e.g. update status codes)
